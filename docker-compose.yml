services:

  redis:
    image: redis
    container_name: redis
    restart: on-failure
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    env_file:
      - ./.env

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env

  celery:
    build: .
    command: >
      bash -c "celery -A config worker --loglevel=info --pool=solo"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - db

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - .nginx/nginx.conf:/etc/nginx/conf.d
      - static_volume:/code/static

  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput \
             && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  app:
    build: .
    container_name: app
  command: >
    bash -c "python manage.py migrate \
    && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    environment:
      - DEBUG=False
      - POSTGRES_HOST=db

volumes:
  postgres_data:
  static_volume:
  redis_data:
